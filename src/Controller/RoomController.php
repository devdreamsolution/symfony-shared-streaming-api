<?php

namespace App\Controller;

use App\Entity\Room;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\Validator\Validator\ValidatorInterface;

/**
 * @Route("/room")
 */
class RoomController extends AbstractController
{
    /**
     * @Route("/create", name="room_create", methods={"POST"})
     */
    public function roomCreate(Request $request, ValidatorInterface $validator)
    {
        $em = $this->getDoctrine()->getManager();

        if(!$this->isGranted('ROLE_GUIDE'))
        {
            $responseArray['code'] = 403;
            $responseArray['message'] = 'Only ROLE_GUIDE can access this function';

            return new JsonResponse($responseArray);
        }

        $owner = $this->getUser();

        $name = $request->request->get('name');
        $description = $request->request->get('description');
        $qr_url = 'http://localhost:8000';      // the QR URL is generated by QR code.
        $start_time = new \DateTime();          // this file can get from Front-End.

        $room = new Room($owner, $name, $description, $qr_url, $start_time);
        
        $errors = $validator->validate($room);
        if(count($errors) > 0)
        {
            foreach($errors as $error)
            {
                $key = $error->getPropertyPath();
                $responseArray['code'] = $error->getCode();
                $responseArray[$key] = $error->getMessage();
            }
            return new JsonResponse($responseArray);
        }

        $em->persist($room);
        $em->flush();

        return new JsonResponse('Successfully');
    }

}
